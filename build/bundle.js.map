{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte-c-reveal/src/Reveal.svelte","../../node_modules/@iconify/svelte/dist/functions.js","../../node_modules/@iconify/svelte/dist/Icon.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached\n    const children = target.childNodes;\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        const seqLen = upper_bound(1, longest + 1, idx => children[m[idx]].claim_order, current) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        if (node !== target.actual_end_child) {\n            target.insertBefore(node, target.actual_end_child);\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append(target, node);\n    }\n    else if (node.parentNode !== target || (anchor && node.nextSibling !== anchor)) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        node.data = '' + data;\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTag();\n    }\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    return new HtmlTag(html_tag_nodes.slice(1, html_tag_nodes.length - 1));\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(claimed_nodes) {\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            if (this.l) {\n                this.n = this.l;\n            }\n            else {\n                this.h(html);\n            }\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.3' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n    import { onMount } from \"svelte\";\n    export let trigger = 0.0;\n    export let duration = 0.4;\n    export let delay = 0;\n    export let reveal = \"fadeIn\";\n    export let hide = \"\";\n    let cssClass = \"\";\n    // Action -----------------\n    function rev(node, args) {\n        let revealNode = node.querySelector(\".svelte-c-reveal\");\n        revealNode.style.setProperty(\"--animation-delay\", args.delay + \"s\");\n        revealNode.style.setProperty(\n            \"--animation-duration\",\n            args.duration + \"s\",\n        );\n        // Anim settings\n        const handler = (entries, observer) => {\n            entries.forEach((entry) => {\n                if (entry.isIntersecting) {\n                    entry.target.dispatchEvent(new CustomEvent(\"in\"));\n                    if (hide === \"\") {\n                        observer.disconnect();\n                    }\n                } else {\n                    if (hide !== \"\") {\n                        entry.target.dispatchEvent(new CustomEvent(\"out\"));\n                    }\n                }\n            });\n        };\n        let _trigger = 100 * trigger;\n        const observer = new IntersectionObserver(handler, {\n            root: null,\n            rootMargin: `0% 0% -${_trigger}% 0%`,\n            threshold: 0,\n        });\n\n        // Observe\n        observer.observe(node);\n\n        // Return\n        return {\n            destroy(observer) {\n                observer.disconnect();\n            },\n        };\n    }\n</script>\n\n<style>\n    .wrapper {\n        overflow: hidden;\n        position: relative;\n        padding: 0;\n        margin: 0;\n    }\n    .hide {\n        opacity: 0;\n        padding: 0;\n        margin: 0;\n    }\n    .svelte-c-reveal {\n        position: relative;\n        --animation-delay: 0s;\n        --animation-duration: 1s;\n        animation-duration: var(--animation-duration);\n        animation-fill-mode: forwards;\n        animation-direction: normal;\n        animation-delay: var(--animation-delay);\n        animation-timing-function: ease-in-out;\n        animation-iteration-count: 1;\n    }\n    .fadeIn {\n        animation-name: fadeIn;\n    }\n    .fadeOut {\n        animation-name: fadeOut;\n    }\n    @keyframes fadeIn {\n        0% {\n            opacity: 0;\n        }\n        100% {\n            opacity: 1;\n        }\n    }\n    @keyframes fadeOut {\n        0% {\n            opacity: 1;\n        }\n        100% {\n            opacity: 0;\n        }\n    }\n    .fadeInUp {\n        animation-name: fadeInUp;\n    }\n    .fadeOutUp {\n        animation-name: fadeOutUp;\n    }\n    @keyframes fadeInUp {\n        0% {\n            opacity: 0;\n            transform: translate3d(0, 15px, 0);\n        }\n        100% {\n            opacity: 1;\n            transform: translateY(0);\n        }\n    }\n    @keyframes fadeOutUp {\n        0% {\n            opacity: 1;\n            transform: translateY(0);\n        }\n        100% {\n            opacity: 0;\n            transform: translate3d(0, -15px, 0);\n        }\n    }\n\n    .fadeInDown {\n        animation-name: fadeInDown;\n    }\n    .fadeOutDown {\n        animation-name: fadeOutDown;\n    }\n    @keyframes fadeInDown {\n        0% {\n            opacity: 0;\n            transform: translate3d(0, -15px, 0);\n        }\n        100% {\n            opacity: 1;\n            transform: translateY(0);\n        }\n    }\n    @keyframes fadeOutDown {\n        0% {\n            opacity: 1;\n            transform: translateY(0);\n        }\n        100% {\n            opacity: 0;\n            transform: translate3d(0, 15px, 0);\n        }\n    }\n\n    .fadeInLeft {\n        animation-name: fadeInLeft;\n    }\n    .fadeOutLeft {\n        animation-name: fadeOutLeft;\n    }\n    @keyframes fadeInLeft {\n        0% {\n            opacity: 0;\n            transform: translate3d(-15px, 0, 0);\n        }\n        100% {\n            opacity: 1;\n            transform: translateX(0);\n        }\n    }\n    @keyframes fadeOutLeft {\n        0% {\n            opacity: 1;\n            transform: translateX(0);\n        }\n        100% {\n            opacity: 0;\n            transform: translate3d(-15px, 0, 0);\n        }\n    }\n\n    .fadeInRight {\n        animation-name: fadeInRight;\n    }\n    .fadeOutRight {\n        animation-name: fadeOutRight;\n    }\n    @keyframes fadeInRight {\n        0% {\n            opacity: 0;\n            transform: translate3d(15px, 0, 0);\n        }\n        100% {\n            opacity: 1;\n            transform: translateX(0);\n        }\n    }\n    @keyframes fadeOutRight {\n        0% {\n            opacity: 1;\n            transform: translateX(0);\n        }\n        100% {\n            opacity: 0;\n            transform: translate3d(15px, 0, 0);\n        }\n    }\n\n    .fadeInRotY {\n        animation-name: fadeInRotY;\n    }\n    .fadeOutRotY {\n        animation-name: fadeOutRotY;\n    }\n    @keyframes fadeInRotY {\n        0% {\n            opacity: 0;\n            transform: rotate3d(0, 1, 0, 90deg);\n        }\n        100% {\n            opacity: 1;\n            transform: rotate3d(0);\n        }\n    }\n    @keyframes fadeOutRotY {\n        0% {\n            opacity: 1;\n            transform: rotate3d(0);\n        }\n        100% {\n            opacity: 0;\n            transform: rotate3d(0, 1, 0, 90deg);\n        }\n    }\n\n    .fadeInRotX {\n        animation-name: fadeInRotX;\n    }\n    .fadeOutRotX {\n        animation-name: fadeOutRotX;\n    }\n    @keyframes fadeInRotX {\n        0% {\n            opacity: 0;\n            transform: rotate3d(1, 0, 0, 90deg);\n        }\n        100% {\n            opacity: 1;\n            transform: rotate3d(0);\n        }\n    }\n    @keyframes fadeOutRotX {\n        0% {\n            opacity: 1;\n            transform: rotate3d(0);\n        }\n        100% {\n            opacity: 0;\n            transform: rotate3d(1, 0, 0, 90deg);\n        }\n    }\n</style>\n\n<div\n    class=\"wrapper\"\n    use:rev={{ duration: duration, delay: delay }}\n    on:in={(e) => (cssClass = reveal)}\n    on:out={(e) => (cssClass = hide)}>\n    <div class={'hide svelte-c-reveal ' + cssClass}>\n        <slot />\n    </div>\n</div>\n","function createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar name = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateIcon = exports.stringToIcon = void 0;\n/**\n * Expression to test part of icon name.\n */\nconst match = /^[a-z0-9]+(-[a-z0-9]+)*$/;\n/**\n * Convert string to Icon object.\n */\nconst stringToIcon = (value, validate, allowSimpleName) => {\n    let provider = '';\n    const colonSeparated = value.split(':');\n    // Check for provider with correct '@' at start\n    if (value.slice(0, 1) === '@') {\n        // First part is provider\n        if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n            // \"@provider:prefix:name\" or \"@provider:prefix-name\"\n            return null;\n        }\n        provider = colonSeparated.shift().slice(1);\n    }\n    // Check split by colon: \"prefix:name\", \"provider:prefix:name\"\n    if (colonSeparated.length > 3 || !colonSeparated.length) {\n        return null;\n    }\n    if (colonSeparated.length > 1) {\n        // \"prefix:name\"\n        const name = colonSeparated.pop();\n        const prefix = colonSeparated.pop();\n        const result = {\n            // Allow provider without '@': \"provider:prefix:name\"\n            provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n            prefix,\n            name,\n        };\n        return validate && !exports.validateIcon(result) ? null : result;\n    }\n    // Attempt to split by dash: \"prefix-name\"\n    const name = colonSeparated[0];\n    const dashSeparated = name.split('-');\n    if (dashSeparated.length > 1) {\n        const result = {\n            provider: provider,\n            prefix: dashSeparated.shift(),\n            name: dashSeparated.join('-'),\n        };\n        return validate && !exports.validateIcon(result) ? null : result;\n    }\n    // If allowEmpty is set, allow empty provider and prefix, allowing names like \"home\"\n    if (allowSimpleName && provider === '') {\n        const result = {\n            provider: provider,\n            prefix: '',\n            name,\n        };\n        return validate && !exports.validateIcon(result, allowSimpleName)\n            ? null\n            : result;\n    }\n    return null;\n};\nexports.stringToIcon = stringToIcon;\n/**\n * Check if icon is valid.\n *\n * This function is not part of stringToIcon because validation is not needed for most code.\n */\nconst validateIcon = (icon, allowSimpleName) => {\n    if (!icon) {\n        return false;\n    }\n    return !!((icon.provider === '' || icon.provider.match(match)) &&\n        ((allowSimpleName && icon.prefix === '') || icon.prefix.match(match)) &&\n        icon.name.match(match));\n};\nexports.validateIcon = validateIcon;\n});\n\nvar merge_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.merge = void 0;\n/**\n * Merge two objects\n *\n * Replacement for Object.assign() that is not supported by IE, so it cannot be used in production yet.\n */\nfunction merge(item1, item2, item3) {\n    const result = Object.create(null);\n    const items = [item1, item2, item3];\n    for (let i = 0; i < 3; i++) {\n        const item = items[i];\n        if (typeof item === 'object' && item) {\n            for (const key in item) {\n                const value = item[key];\n                if (value !== void 0) {\n                    result[key] = value;\n                }\n            }\n        }\n    }\n    return result;\n}\nexports.merge = merge;\n});\n\nvar icon = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fullIcon = exports.iconDefaults = void 0;\n\n/**\n * Default values for IconifyIcon properties\n */\nexports.iconDefaults = Object.freeze({\n    body: '',\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16,\n    rotate: 0,\n    vFlip: false,\n    hFlip: false,\n});\n/**\n * Create new icon with all properties\n */\nfunction fullIcon(icon) {\n    return merge_1.merge(exports.iconDefaults, icon);\n}\nexports.fullIcon = fullIcon;\n});\n\nvar merge = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeIcons = void 0;\n\n/**\n * Icon keys\n */\nconst iconKeys = Object.keys(icon.iconDefaults);\n/**\n * Merge two icons\n *\n * icon2 overrides icon1\n */\nfunction mergeIcons(icon1, icon2) {\n    const icon = Object.create(null);\n    iconKeys.forEach((key) => {\n        if (icon1[key] === void 0) {\n            if (icon2[key] !== void 0) {\n                icon[key] = icon2[key];\n            }\n            return;\n        }\n        if (icon2[key] === void 0) {\n            icon[key] = icon1[key];\n            return;\n        }\n        switch (key) {\n            case 'rotate':\n                icon[key] =\n                    (icon1[key] + icon2[key]) % 4;\n                return;\n            case 'hFlip':\n            case 'vFlip':\n                icon[key] = icon1[key] !== icon2[key];\n                return;\n            default:\n                icon[key] = icon2[key];\n        }\n    });\n    return icon;\n}\nexports.mergeIcons = mergeIcons;\n});\n\nvar iconSet = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseIconSet = void 0;\n\n\n\n/**\n * Get list of defaults keys\n */\nconst defaultsKeys = Object.keys(icon.iconDefaults);\n/**\n * Resolve alias\n */\nfunction resolveAlias(alias, icons, aliases, level = 0) {\n    const parent = alias.parent;\n    if (icons[parent] !== void 0) {\n        return merge.mergeIcons(icons[parent], alias);\n    }\n    if (aliases[parent] !== void 0) {\n        if (level > 2) {\n            // icon + alias + alias + alias = too much nesting, possibly infinite\n            return null;\n        }\n        const icon = resolveAlias(aliases[parent], icons, aliases, level + 1);\n        if (icon) {\n            return merge.mergeIcons(icon, alias);\n        }\n    }\n    return null;\n}\n/**\n * Extract icons from an icon set\n */\nfunction parseIconSet(data, callback, list = 'none') {\n    const added = [];\n    // Must be an object\n    if (typeof data !== 'object') {\n        return list === 'none' ? false : added;\n    }\n    // Check for missing icons list returned by API\n    if (data.not_found instanceof Array) {\n        data.not_found.forEach((name) => {\n            callback(name, null);\n            if (list === 'all') {\n                added.push(name);\n            }\n        });\n    }\n    // Must have 'icons' object\n    if (typeof data.icons !== 'object') {\n        return list === 'none' ? false : added;\n    }\n    // Get default values\n    const defaults = Object.create(null);\n    defaultsKeys.forEach((key) => {\n        if (data[key] !== void 0 && typeof data[key] !== 'object') {\n            defaults[key] = data[key];\n        }\n    });\n    // Get icons\n    const icons = data.icons;\n    Object.keys(icons).forEach((name) => {\n        const icon$1 = icons[name];\n        if (typeof icon$1.body !== 'string') {\n            return;\n        }\n        // Freeze icon to make sure it will not be modified\n        callback(name, Object.freeze(merge_1.merge(icon.iconDefaults, defaults, icon$1)));\n        added.push(name);\n    });\n    // Get aliases\n    if (typeof data.aliases === 'object') {\n        const aliases = data.aliases;\n        Object.keys(aliases).forEach((name) => {\n            const icon$1 = resolveAlias(aliases[name], icons, aliases, 1);\n            if (icon$1) {\n                // Freeze icon to make sure it will not be modified\n                callback(name, Object.freeze(merge_1.merge(icon.iconDefaults, defaults, icon$1)));\n                added.push(name);\n            }\n        });\n    }\n    return list === 'none' ? added.length > 0 : added;\n}\nexports.parseIconSet = parseIconSet;\n});\n\nvar storage_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.listIcons = exports.getIcon = exports.iconExists = exports.addIcon = exports.addIconSet = exports.getStorage = exports.newStorage = void 0;\n\n\n/**\n * Storage by provider and prefix\n */\nconst storage = Object.create(null);\n/**\n * Create new storage\n */\nfunction newStorage(provider, prefix) {\n    return {\n        provider,\n        prefix,\n        icons: Object.create(null),\n        missing: Object.create(null),\n    };\n}\nexports.newStorage = newStorage;\n/**\n * Get storage for provider and prefix\n */\nfunction getStorage(provider, prefix) {\n    if (storage[provider] === void 0) {\n        storage[provider] = Object.create(null);\n    }\n    const providerStorage = storage[provider];\n    if (providerStorage[prefix] === void 0) {\n        providerStorage[prefix] = newStorage(provider, prefix);\n    }\n    return providerStorage[prefix];\n}\nexports.getStorage = getStorage;\n/**\n * Add icon set to storage\n *\n * Returns array of added icons if 'list' is true and icons were added successfully\n */\nfunction addIconSet(storage, data, list = 'none') {\n    const t = Date.now();\n    return iconSet.parseIconSet(data, (name, icon) => {\n        if (icon === null) {\n            storage.missing[name] = t;\n        }\n        else {\n            storage.icons[name] = icon;\n        }\n    }, list);\n}\nexports.addIconSet = addIconSet;\n/**\n * Add icon to storage\n */\nfunction addIcon(storage, name, icon$1) {\n    try {\n        if (typeof icon$1.body === 'string') {\n            // Freeze icon to make sure it will not be modified\n            storage.icons[name] = Object.freeze(icon.fullIcon(icon$1));\n            return true;\n        }\n    }\n    catch (err) {\n        // Do nothing\n    }\n    return false;\n}\nexports.addIcon = addIcon;\n/**\n * Check if icon exists\n */\nfunction iconExists(storage, name) {\n    return storage.icons[name] !== void 0;\n}\nexports.iconExists = iconExists;\n/**\n * Get icon data\n */\nfunction getIcon(storage, name) {\n    const value = storage.icons[name];\n    return value === void 0 ? null : value;\n}\nexports.getIcon = getIcon;\n/**\n * List available icons\n */\nfunction listIcons(provider, prefix) {\n    let allIcons = [];\n    // Get providers\n    let providers;\n    if (typeof provider === 'string') {\n        providers = [provider];\n    }\n    else {\n        providers = Object.keys(storage);\n    }\n    // Get all icons\n    providers.forEach((provider) => {\n        let prefixes;\n        if (typeof provider === 'string' && typeof prefix === 'string') {\n            prefixes = [prefix];\n        }\n        else {\n            prefixes =\n                storage[provider] === void 0\n                    ? []\n                    : Object.keys(storage[provider]);\n        }\n        prefixes.forEach((prefix) => {\n            const storage = getStorage(provider, prefix);\n            const icons = Object.keys(storage.icons).map((name) => (provider !== '' ? '@' + provider + ':' : '') +\n                prefix +\n                ':' +\n                name);\n            allIcons = allIcons.concat(icons);\n        });\n    });\n    return allIcons;\n}\nexports.listIcons = listIcons;\n});\n\nvar functions = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storageFunctions = exports.addCollection = exports.addIcon = exports.getIconData = exports.allowSimpleNames = void 0;\n\n\n\n\n/**\n * Allow storing icons without provider or prefix, making it possible to store icons like \"home\"\n */\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n    if (typeof allow === 'boolean') {\n        simpleNames = allow;\n    }\n    return simpleNames;\n}\nexports.allowSimpleNames = allowSimpleNames;\n/**\n * Get icon data\n */\nfunction getIconData(name$1) {\n    const icon = typeof name$1 === 'string' ? name.stringToIcon(name$1, true, simpleNames) : name$1;\n    return icon\n        ? storage_1.getIcon(storage_1.getStorage(icon.provider, icon.prefix), icon.name)\n        : null;\n}\nexports.getIconData = getIconData;\n/**\n * Add one icon\n */\nfunction addIcon(name$1, data) {\n    const icon = name.stringToIcon(name$1, true, simpleNames);\n    if (!icon) {\n        return false;\n    }\n    const storage = storage_1.getStorage(icon.provider, icon.prefix);\n    return storage_1.addIcon(storage, icon.name, data);\n}\nexports.addIcon = addIcon;\n/**\n * Add icon set\n */\nfunction addCollection(data, provider) {\n    if (typeof data !== 'object') {\n        return false;\n    }\n    // Get provider\n    if (typeof provider !== 'string') {\n        provider = typeof data.provider === 'string' ? data.provider : '';\n    }\n    // Check for simple names: requires empty provider and prefix\n    if (simpleNames &&\n        provider === '' &&\n        (typeof data.prefix !== 'string' || data.prefix === '')) {\n        // Simple names: add icons one by one\n        let added = false;\n        iconSet.parseIconSet(data, (name, icon) => {\n            if (icon !== null && addIcon(name, icon)) {\n                added = true;\n            }\n        });\n        return added;\n    }\n    // Validate provider and prefix\n    if (typeof data.prefix !== 'string' ||\n        !name.validateIcon({\n            provider,\n            prefix: data.prefix,\n            name: 'a',\n        })) {\n        return false;\n    }\n    const storage = storage_1.getStorage(provider, data.prefix);\n    return !!storage_1.addIconSet(storage, data);\n}\nexports.addCollection = addCollection;\n/**\n * Export\n */\nexports.storageFunctions = {\n    // Check if icon exists\n    iconExists: (name) => getIconData(name) !== null,\n    // Get raw icon data\n    getIcon: (name) => {\n        const result = getIconData(name);\n        return result ? merge_1.merge(result) : null;\n    },\n    // List icons\n    listIcons: storage_1.listIcons,\n    // Add icon\n    addIcon,\n    // Add icon set\n    addCollection,\n};\n});\n\nvar ids = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.replaceIDs = void 0;\n/**\n * Regular expression for finding ids\n */\nconst regex = /\\sid=\"(\\S+)\"/g;\n/**\n * New random-ish prefix for ids\n */\nconst randomPrefix = 'IconifyId-' +\n    Date.now().toString(16) +\n    '-' +\n    ((Math.random() * 0x1000000) | 0).toString(16) +\n    '-';\n/**\n * Counter for ids, increasing with every replacement\n */\nlet counter = 0;\n/**\n * Replace multiple occurance of same string\n */\nfunction strReplace(search, replace, subject) {\n    let pos = 0;\n    while ((pos = subject.indexOf(search, pos)) !== -1) {\n        subject =\n            subject.slice(0, pos) +\n                replace +\n                subject.slice(pos + search.length);\n        pos += replace.length;\n    }\n    return subject;\n}\n/**\n * Replace IDs in SVG output with unique IDs\n * Fast replacement without parsing XML, assuming commonly used patterns and clean XML (icon should have been cleaned up with Iconify Tools or SVGO).\n */\nfunction replaceIDs(body, prefix = randomPrefix) {\n    // Find all IDs\n    const ids = [];\n    let match;\n    while ((match = regex.exec(body))) {\n        ids.push(match[1]);\n    }\n    if (!ids.length) {\n        return body;\n    }\n    // Replace with unique ids\n    ids.forEach(id => {\n        const newID = typeof prefix === 'function' ? prefix() : prefix + counter++;\n        body = strReplace('=\"' + id + '\"', '=\"' + newID + '\"', body);\n        body = strReplace('=\"#' + id + '\"', '=\"#' + newID + '\"', body);\n        body = strReplace('(#' + id + ')', '(#' + newID + ')', body);\n    });\n    return body;\n}\nexports.replaceIDs = replaceIDs;\n});\n\nvar calcSize = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateSize = void 0;\n/**\n * Regular expressions for calculating dimensions\n */\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n/**\n * Calculate second dimension when only 1 dimension is set\n *\n * @param {string|number} size One dimension (such as width)\n * @param {number} ratio Width/height ratio.\n *      If size is width, ratio = height/width\n *      If size is height, ratio = width/height\n * @param {number} [precision] Floating number precision in result to minimize output. Default = 2\n * @return {string|number} Another dimension\n */\nfunction calculateSize(size, ratio, precision) {\n    if (ratio === 1) {\n        return size;\n    }\n    precision = precision === void 0 ? 100 : precision;\n    if (typeof size === 'number') {\n        return Math.ceil(size * ratio * precision) / precision;\n    }\n    if (typeof size !== 'string') {\n        return size;\n    }\n    // Split code into sets of strings and numbers\n    const oldParts = size.split(unitsSplit);\n    if (oldParts === null || !oldParts.length) {\n        return size;\n    }\n    const newParts = [];\n    let code = oldParts.shift();\n    let isNumber = unitsTest.test(code);\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        if (isNumber) {\n            const num = parseFloat(code);\n            if (isNaN(num)) {\n                newParts.push(code);\n            }\n            else {\n                newParts.push(Math.ceil(num * ratio * precision) / precision);\n            }\n        }\n        else {\n            newParts.push(code);\n        }\n        // next\n        code = oldParts.shift();\n        if (code === void 0) {\n            return newParts.join('');\n        }\n        isNumber = !isNumber;\n    }\n}\nexports.calculateSize = calculateSize;\n});\n\nvar customisations = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeCustomisations = exports.defaults = void 0;\n/**\n * Default icon customisations values\n */\nexports.defaults = Object.freeze({\n    // Display mode\n    inline: false,\n    // Dimensions\n    width: null,\n    height: null,\n    // Alignment\n    hAlign: 'center',\n    vAlign: 'middle',\n    slice: false,\n    // Transformations\n    hFlip: false,\n    vFlip: false,\n    rotate: 0,\n});\n/**\n * Convert IconifyIconCustomisations to FullIconCustomisations\n */\nfunction mergeCustomisations(defaults, item) {\n    const result = {};\n    for (const key in defaults) {\n        const attr = key;\n        // Copy old value\n        result[attr] = defaults[attr];\n        if (item[attr] === void 0) {\n            continue;\n        }\n        // Validate new value\n        const value = item[attr];\n        switch (attr) {\n            // Boolean attributes that override old value\n            case 'inline':\n            case 'slice':\n                if (typeof value === 'boolean') {\n                    result[attr] = value;\n                }\n                break;\n            // Boolean attributes that are merged\n            case 'hFlip':\n            case 'vFlip':\n                if (value === true) {\n                    result[attr] = !result[attr];\n                }\n                break;\n            // Non-empty string\n            case 'hAlign':\n            case 'vAlign':\n                if (typeof value === 'string' && value !== '') {\n                    result[attr] = value;\n                }\n                break;\n            // Non-empty string / non-zero number / null\n            case 'width':\n            case 'height':\n                if ((typeof value === 'string' && value !== '') ||\n                    (typeof value === 'number' && value) ||\n                    value === null) {\n                    result[attr] = value;\n                }\n                break;\n            // Rotation\n            case 'rotate':\n                if (typeof value === 'number') {\n                    result[attr] += value;\n                }\n                break;\n        }\n    }\n    return result;\n}\nexports.mergeCustomisations = mergeCustomisations;\n});\n\nvar builder = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.iconToSVG = void 0;\n\n/**\n * Get preserveAspectRatio value\n */\nfunction preserveAspectRatio(props) {\n    let result = '';\n    switch (props.hAlign) {\n        case 'left':\n            result += 'xMin';\n            break;\n        case 'right':\n            result += 'xMax';\n            break;\n        default:\n            result += 'xMid';\n    }\n    switch (props.vAlign) {\n        case 'top':\n            result += 'YMin';\n            break;\n        case 'bottom':\n            result += 'YMax';\n            break;\n        default:\n            result += 'YMid';\n    }\n    result += props.slice ? ' slice' : ' meet';\n    return result;\n}\n/**\n * Get SVG attributes and content from icon + customisations\n *\n * Does not generate style to make it compatible with frameworks that use objects for style, such as React.\n * Instead, it generates 'inline' value. If true, rendering engine should add verticalAlign: -0.125em to icon.\n *\n * Customisations should be normalised by platform specific parser.\n * Result should be converted to <svg> by platform specific parser.\n * Use replaceIDs to generate unique IDs for body.\n */\nfunction iconToSVG(icon, customisations) {\n    // viewBox\n    const box = {\n        left: icon.left,\n        top: icon.top,\n        width: icon.width,\n        height: icon.height,\n    };\n    // Body\n    let body = icon.body;\n    // Apply transformations\n    [icon, customisations].forEach((props) => {\n        const transformations = [];\n        const hFlip = props.hFlip;\n        const vFlip = props.vFlip;\n        let rotation = props.rotate;\n        // Icon is flipped first, then rotated\n        if (hFlip) {\n            if (vFlip) {\n                rotation += 2;\n            }\n            else {\n                // Horizontal flip\n                transformations.push('translate(' +\n                    (box.width + box.left) +\n                    ' ' +\n                    (0 - box.top) +\n                    ')');\n                transformations.push('scale(-1 1)');\n                box.top = box.left = 0;\n            }\n        }\n        else if (vFlip) {\n            // Vertical flip\n            transformations.push('translate(' +\n                (0 - box.left) +\n                ' ' +\n                (box.height + box.top) +\n                ')');\n            transformations.push('scale(1 -1)');\n            box.top = box.left = 0;\n        }\n        let tempValue;\n        if (rotation < 0) {\n            rotation -= Math.floor(rotation / 4) * 4;\n        }\n        rotation = rotation % 4;\n        switch (rotation) {\n            case 1:\n                // 90deg\n                tempValue = box.height / 2 + box.top;\n                transformations.unshift('rotate(90 ' + tempValue + ' ' + tempValue + ')');\n                break;\n            case 2:\n                // 180deg\n                transformations.unshift('rotate(180 ' +\n                    (box.width / 2 + box.left) +\n                    ' ' +\n                    (box.height / 2 + box.top) +\n                    ')');\n                break;\n            case 3:\n                // 270deg\n                tempValue = box.width / 2 + box.left;\n                transformations.unshift('rotate(-90 ' + tempValue + ' ' + tempValue + ')');\n                break;\n        }\n        if (rotation % 2 === 1) {\n            // Swap width/height and x/y for 90deg or 270deg rotation\n            if (box.left !== 0 || box.top !== 0) {\n                tempValue = box.left;\n                box.left = box.top;\n                box.top = tempValue;\n            }\n            if (box.width !== box.height) {\n                tempValue = box.width;\n                box.width = box.height;\n                box.height = tempValue;\n            }\n        }\n        if (transformations.length) {\n            body =\n                '<g transform=\"' +\n                    transformations.join(' ') +\n                    '\">' +\n                    body +\n                    '</g>';\n        }\n    });\n    // Calculate dimensions\n    let width, height;\n    if (customisations.width === null && customisations.height === null) {\n        // Set height to '1em', calculate width\n        height = '1em';\n        width = calcSize.calculateSize(height, box.width / box.height);\n    }\n    else if (customisations.width !== null &&\n        customisations.height !== null) {\n        // Values are set\n        width = customisations.width;\n        height = customisations.height;\n    }\n    else if (customisations.height !== null) {\n        // Height is set\n        height = customisations.height;\n        width = calcSize.calculateSize(height, box.width / box.height);\n    }\n    else {\n        // Width is set\n        width = customisations.width;\n        height = calcSize.calculateSize(width, box.height / box.width);\n    }\n    // Check for 'auto'\n    if (width === 'auto') {\n        width = box.width;\n    }\n    if (height === 'auto') {\n        height = box.height;\n    }\n    // Convert to string\n    width = typeof width === 'string' ? width : width + '';\n    height = typeof height === 'string' ? height : height + '';\n    // Result\n    const result = {\n        attributes: {\n            width,\n            height,\n            preserveAspectRatio: preserveAspectRatio(customisations),\n            viewBox: box.left + ' ' + box.top + ' ' + box.width + ' ' + box.height,\n        },\n        body,\n    };\n    if (customisations.inline) {\n        result.inline = true;\n    }\n    return result;\n}\nexports.iconToSVG = iconToSVG;\n});\n\nvar functions$1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.builderFunctions = void 0;\n\n\n\n\n\n/**\n * Exported builder functions\n */\nexports.builderFunctions = {\n    replaceIDs: ids.replaceIDs,\n    calculateSize: calcSize.calculateSize,\n    buildIcon: (icon$1, customisations$1) => {\n        return builder.iconToSVG(icon.fullIcon(icon$1), customisations.mergeCustomisations(customisations.defaults, customisations$1));\n    },\n};\n});\n\nvar modules = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.coreModules = void 0;\nexports.coreModules = {};\n});\n\nvar config = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultConfig = void 0;\n/**\n * Default RedundancyConfig for API calls\n */\nexports.defaultConfig = {\n    resources: [],\n    index: 0,\n    timeout: 2000,\n    rotate: 750,\n    random: false,\n    dataAfterTimeout: false,\n};\n});\n\nvar query = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendQuery = void 0;\n/**\n * Send query\n */\nfunction sendQuery(config, payload, query, done, success) {\n    // Get number of resources\n    const resourcesCount = config.resources.length;\n    // Save start index\n    const startIndex = config.random\n        ? Math.floor(Math.random() * resourcesCount)\n        : config.index;\n    // Get resources\n    let resources;\n    if (config.random) {\n        // Randomise array\n        let list = config.resources.slice(0);\n        resources = [];\n        while (list.length > 1) {\n            const nextIndex = Math.floor(Math.random() * list.length);\n            resources.push(list[nextIndex]);\n            list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n        }\n        resources = resources.concat(list);\n    }\n    else {\n        // Rearrange resources to start with startIndex\n        resources = config.resources\n            .slice(startIndex)\n            .concat(config.resources.slice(0, startIndex));\n    }\n    // Counters, status\n    const startTime = Date.now();\n    let status = 'pending';\n    let queriesSent = 0;\n    let lastError = void 0;\n    // Timer\n    let timer = null;\n    // Execution queue\n    let queue = [];\n    // Callbacks to call when query is complete\n    let doneCallbacks = [];\n    if (typeof done === 'function') {\n        doneCallbacks.push(done);\n    }\n    /**\n     * Reset timer\n     */\n    function resetTimer() {\n        if (timer) {\n            clearTimeout(timer);\n            timer = null;\n        }\n    }\n    /**\n     * Abort everything\n     */\n    function abort() {\n        // Change status\n        if (status === 'pending') {\n            status = 'aborted';\n        }\n        // Reset timer\n        resetTimer();\n        // Abort all queued items\n        queue.forEach((item) => {\n            if (item.abort) {\n                item.abort();\n            }\n            if (item.status === 'pending') {\n                item.status = 'aborted';\n            }\n        });\n        queue = [];\n    }\n    /**\n     * Add / replace callback to call when execution is complete.\n     * This can be used to abort pending query implementations when query is complete or aborted.\n     */\n    function subscribe(callback, overwrite) {\n        if (overwrite) {\n            doneCallbacks = [];\n        }\n        if (typeof callback === 'function') {\n            doneCallbacks.push(callback);\n        }\n    }\n    /**\n     * Get query status\n     */\n    function getQueryStatus() {\n        return {\n            startTime,\n            payload,\n            status,\n            queriesSent,\n            queriesPending: queue.length,\n            subscribe,\n            abort,\n        };\n    }\n    /**\n     * Fail query\n     */\n    function failQuery() {\n        status = 'failed';\n        // Send notice to all callbacks\n        doneCallbacks.forEach((callback) => {\n            callback(void 0, lastError);\n        });\n    }\n    /**\n     * Clear queue\n     */\n    function clearQueue() {\n        queue = queue.filter((item) => {\n            if (item.status === 'pending') {\n                item.status = 'aborted';\n            }\n            if (item.abort) {\n                item.abort();\n            }\n            return false;\n        });\n    }\n    /**\n     * Got response from module\n     */\n    function moduleResponse(item, data, error) {\n        const isError = data === void 0;\n        // Remove item from queue\n        queue = queue.filter((queued) => queued !== item);\n        // Check status\n        switch (status) {\n            case 'pending':\n                // Pending\n                break;\n            case 'failed':\n                if (isError || !config.dataAfterTimeout) {\n                    // Query has already timed out or dataAfterTimeout is disabled\n                    return;\n                }\n                // Success after failure\n                break;\n            default:\n                // Aborted or completed\n                return;\n        }\n        // Error\n        if (isError) {\n            if (error !== void 0) {\n                lastError = error;\n            }\n            if (!queue.length) {\n                if (!resources.length) {\n                    // Nothing else queued, nothing can be queued\n                    failQuery();\n                }\n                else {\n                    // Queue is empty: run next item immediately\n                    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                    execNext();\n                }\n            }\n            return;\n        }\n        // Reset timers, abort pending queries\n        resetTimer();\n        clearQueue();\n        // Update index in Redundancy\n        if (success && !config.random) {\n            const index = config.resources.indexOf(item.resource);\n            if (index !== -1 && index !== config.index) {\n                success(index);\n            }\n        }\n        // Mark as completed and call callbacks\n        status = 'completed';\n        doneCallbacks.forEach((callback) => {\n            callback(data);\n        });\n    }\n    /**\n     * Execute next query\n     */\n    function execNext() {\n        // Check status\n        if (status !== 'pending') {\n            return;\n        }\n        // Reset timer\n        resetTimer();\n        // Get resource\n        const resource = resources.shift();\n        if (resource === void 0) {\n            // Nothing to execute: wait for final timeout before failing\n            if (queue.length) {\n                const timeout = typeof config.timeout === 'function'\n                    ? config.timeout(startTime)\n                    : config.timeout;\n                if (timeout) {\n                    // Last timeout before failing to allow late response\n                    timer = setTimeout(() => {\n                        resetTimer();\n                        if (status === 'pending') {\n                            // Clear queue\n                            clearQueue();\n                            failQuery();\n                        }\n                    }, timeout);\n                    return;\n                }\n            }\n            // Fail\n            failQuery();\n            return;\n        }\n        // Create new item\n        const item = {\n            getQueryStatus,\n            status: 'pending',\n            resource,\n            done: (data, error) => {\n                moduleResponse(item, data, error);\n            },\n        };\n        // Add to queue\n        queue.push(item);\n        // Bump next index\n        queriesSent++;\n        // Get timeout for next item\n        const timeout = typeof config.rotate === 'function'\n            ? config.rotate(queriesSent, startTime)\n            : config.rotate;\n        // Create timer\n        timer = setTimeout(execNext, timeout);\n        // Execute it\n        query(resource, payload, item);\n    }\n    // Execute first query on next tick\n    setTimeout(execNext);\n    // Return getQueryStatus()\n    return getQueryStatus;\n}\nexports.sendQuery = sendQuery;\n});\n\nvar redundancy = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initRedundancy = void 0;\n\n\n/**\n * Set configuration\n */\nfunction setConfig(config$1) {\n    if (typeof config$1 !== 'object' ||\n        typeof config$1.resources !== 'object' ||\n        !(config$1.resources instanceof Array) ||\n        !config$1.resources.length) {\n        throw new Error('Invalid Reduncancy configuration');\n    }\n    const newConfig = Object.create(null);\n    let key;\n    for (key in config.defaultConfig) {\n        if (config$1[key] !== void 0) {\n            newConfig[key] = config$1[key];\n        }\n        else {\n            newConfig[key] = config.defaultConfig[key];\n        }\n    }\n    return newConfig;\n}\n/**\n * Redundancy instance\n */\nfunction initRedundancy(cfg) {\n    // Configuration\n    const config = setConfig(cfg);\n    // List of queries\n    let queries = [];\n    /**\n     * Remove aborted and completed queries\n     */\n    function cleanup() {\n        queries = queries.filter((item) => item().status === 'pending');\n    }\n    /**\n     * Send query\n     */\n    function query$1(payload, queryCallback, doneCallback) {\n        const query$1 = query.sendQuery(config, payload, queryCallback, (data, error) => {\n            // Remove query from list\n            cleanup();\n            // Call callback\n            if (doneCallback) {\n                doneCallback(data, error);\n            }\n        }, (newIndex) => {\n            // Update start index\n            config.index = newIndex;\n        });\n        queries.push(query$1);\n        return query$1;\n    }\n    /**\n     * Find instance\n     */\n    function find(callback) {\n        const result = queries.find((value) => {\n            return callback(value);\n        });\n        return result !== void 0 ? result : null;\n    }\n    // Create and return functions\n    const instance = {\n        query: query$1,\n        find,\n        setIndex: (index) => {\n            config.index = index;\n        },\n        getIndex: () => config.index,\n        cleanup,\n    };\n    return instance;\n}\nexports.initRedundancy = initRedundancy;\n});\n\nvar sort = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sortIcons = void 0;\n\n/**\n * Check if icons have been loaded\n */\nfunction sortIcons(icons) {\n    const result = {\n        loaded: [],\n        missing: [],\n        pending: [],\n    };\n    const storage = Object.create(null);\n    // Sort icons alphabetically to prevent duplicates and make sure they are sorted in API queries\n    icons.sort((a, b) => {\n        if (a.provider !== b.provider) {\n            return a.provider.localeCompare(b.provider);\n        }\n        if (a.prefix !== b.prefix) {\n            return a.prefix.localeCompare(b.prefix);\n        }\n        return a.name.localeCompare(b.name);\n    });\n    let lastIcon = {\n        provider: '',\n        prefix: '',\n        name: '',\n    };\n    icons.forEach((icon) => {\n        if (lastIcon.name === icon.name &&\n            lastIcon.prefix === icon.prefix &&\n            lastIcon.provider === icon.provider) {\n            return;\n        }\n        lastIcon = icon;\n        // Check icon\n        const provider = icon.provider;\n        const prefix = icon.prefix;\n        const name = icon.name;\n        if (storage[provider] === void 0) {\n            storage[provider] = Object.create(null);\n        }\n        const providerStorage = storage[provider];\n        if (providerStorage[prefix] === void 0) {\n            providerStorage[prefix] = storage_1.getStorage(provider, prefix);\n        }\n        const localStorage = providerStorage[prefix];\n        let list;\n        if (localStorage.icons[name] !== void 0) {\n            list = result.loaded;\n        }\n        else if (prefix === '' || localStorage.missing[name] !== void 0) {\n            // Mark icons without prefix as missing because they cannot be loaded from API\n            list = result.missing;\n        }\n        else {\n            list = result.pending;\n        }\n        const item = {\n            provider,\n            prefix,\n            name,\n        };\n        list.push(item);\n    });\n    return result;\n}\nexports.sortIcons = sortIcons;\n});\n\nvar callbacks = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeCallback = exports.updateCallbacks = exports.callbacks = void 0;\n\n// Records sorted by provider and prefix\n// This export is only for unit testing, should not be used\nexports.callbacks = Object.create(null);\nconst pendingUpdates = Object.create(null);\n/**\n * Remove callback\n */\nfunction removeCallback(sources, id) {\n    sources.forEach((source) => {\n        const provider = source.provider;\n        if (exports.callbacks[provider] === void 0) {\n            return;\n        }\n        const providerCallbacks = exports.callbacks[provider];\n        const prefix = source.prefix;\n        const items = providerCallbacks[prefix];\n        if (items) {\n            providerCallbacks[prefix] = items.filter((row) => row.id !== id);\n        }\n    });\n}\n/**\n * Update all callbacks for provider and prefix\n */\nfunction updateCallbacks(provider, prefix) {\n    if (pendingUpdates[provider] === void 0) {\n        pendingUpdates[provider] = Object.create(null);\n    }\n    const providerPendingUpdates = pendingUpdates[provider];\n    if (!providerPendingUpdates[prefix]) {\n        providerPendingUpdates[prefix] = true;\n        setTimeout(() => {\n            providerPendingUpdates[prefix] = false;\n            if (exports.callbacks[provider] === void 0 ||\n                exports.callbacks[provider][prefix] === void 0) {\n                return;\n            }\n            // Get all items\n            const items = exports.callbacks[provider][prefix].slice(0);\n            if (!items.length) {\n                return;\n            }\n            const storage = storage_1.getStorage(provider, prefix);\n            // Check each item for changes\n            let hasPending = false;\n            items.forEach((item) => {\n                const icons = item.icons;\n                const oldLength = icons.pending.length;\n                icons.pending = icons.pending.filter((icon) => {\n                    if (icon.prefix !== prefix) {\n                        // Checking only current prefix\n                        return true;\n                    }\n                    const name = icon.name;\n                    if (storage.icons[name] !== void 0) {\n                        // Loaded\n                        icons.loaded.push({\n                            provider,\n                            prefix,\n                            name,\n                        });\n                    }\n                    else if (storage.missing[name] !== void 0) {\n                        // Missing\n                        icons.missing.push({\n                            provider,\n                            prefix,\n                            name,\n                        });\n                    }\n                    else {\n                        // Pending\n                        hasPending = true;\n                        return true;\n                    }\n                    return false;\n                });\n                // Changes detected - call callback\n                if (icons.pending.length !== oldLength) {\n                    if (!hasPending) {\n                        // All icons have been loaded - remove callback from prefix\n                        removeCallback([\n                            {\n                                provider,\n                                prefix,\n                            },\n                        ], item.id);\n                    }\n                    item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n                }\n            });\n        });\n    }\n}\nexports.updateCallbacks = updateCallbacks;\n/**\n * Unique id counter for callbacks\n */\nlet idCounter = 0;\n/**\n * Add callback\n */\nfunction storeCallback(callback, icons, pendingSources) {\n    // Create unique id and abort function\n    const id = idCounter++;\n    const abort = removeCallback.bind(null, pendingSources, id);\n    if (!icons.pending.length) {\n        // Do not store item without pending icons and return function that does nothing\n        return abort;\n    }\n    // Create item and store it for all pending prefixes\n    const item = {\n        id,\n        icons,\n        callback,\n        abort: abort,\n    };\n    pendingSources.forEach((source) => {\n        const provider = source.provider;\n        const prefix = source.prefix;\n        if (exports.callbacks[provider] === void 0) {\n            exports.callbacks[provider] = Object.create(null);\n        }\n        const providerCallbacks = exports.callbacks[provider];\n        if (providerCallbacks[prefix] === void 0) {\n            providerCallbacks[prefix] = [];\n        }\n        providerCallbacks[prefix].push(item);\n    });\n    return abort;\n}\nexports.storeCallback = storeCallback;\n});\n\nvar modules$1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAPIModule = exports.setAPIModule = void 0;\n/**\n * Local storate types and entries\n */\nconst storage = Object.create(null);\n/**\n * Set API module\n */\nfunction setAPIModule(provider, item) {\n    storage[provider] = item;\n}\nexports.setAPIModule = setAPIModule;\n/**\n * Get API module\n */\nfunction getAPIModule(provider) {\n    return storage[provider] === void 0 ? storage[''] : storage[provider];\n}\nexports.getAPIModule = getAPIModule;\n});\n\nvar config$1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAPIConfig = exports.setAPIConfig = void 0;\n/**\n * Create full API configuration from partial data\n */\nfunction createConfig(source) {\n    let resources;\n    if (typeof source.resources === 'string') {\n        resources = [source.resources];\n    }\n    else {\n        resources = source.resources;\n        if (!(resources instanceof Array) || !resources.length) {\n            return null;\n        }\n    }\n    const result = {\n        // API hosts\n        resources: resources,\n        // Root path\n        path: source.path === void 0 ? '/' : source.path,\n        // URL length limit\n        maxURL: source.maxURL ? source.maxURL : 500,\n        // Timeout before next host is used.\n        rotate: source.rotate ? source.rotate : 750,\n        // Timeout before failing query.\n        timeout: source.timeout ? source.timeout : 5000,\n        // Randomise default API end point.\n        random: source.random === true,\n        // Start index\n        index: source.index ? source.index : 0,\n        // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n        dataAfterTimeout: source.dataAfterTimeout !== false,\n    };\n    return result;\n}\n/**\n * Local storage\n */\nconst configStorage = Object.create(null);\n/**\n * Redundancy for API servers.\n *\n * API should have very high uptime because of implemented redundancy at server level, but\n * sometimes bad things happen. On internet 100% uptime is not possible.\n *\n * There could be routing problems. Server might go down for whatever reason, but it takes\n * few minutes to detect that downtime, so during those few minutes API might not be accessible.\n *\n * This script has some redundancy to mitigate possible network issues.\n *\n * If one host cannot be reached in 'rotate' (750 by default) ms, script will try to retrieve\n * data from different host. Hosts have different configurations, pointing to different\n * API servers hosted at different providers.\n */\nconst fallBackAPISources = [\n    'https://api.simplesvg.com',\n    'https://api.unisvg.com',\n];\n// Shuffle fallback API\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n    if (fallBackAPISources.length === 1) {\n        fallBackAPI.push(fallBackAPISources.shift());\n    }\n    else {\n        // Get first or last item\n        if (Math.random() > 0.5) {\n            fallBackAPI.push(fallBackAPISources.shift());\n        }\n        else {\n            fallBackAPI.push(fallBackAPISources.pop());\n        }\n    }\n}\n// Add default API\nconfigStorage[''] = createConfig({\n    resources: ['https://api.iconify.design'].concat(fallBackAPI),\n});\n/**\n * Add custom config for provider\n */\nfunction setAPIConfig(provider, customConfig) {\n    const config = createConfig(customConfig);\n    if (config === null) {\n        return false;\n    }\n    configStorage[provider] = config;\n    return true;\n}\nexports.setAPIConfig = setAPIConfig;\n/**\n * Get API configuration\n */\nconst getAPIConfig = (provider) => configStorage[provider];\nexports.getAPIConfig = getAPIConfig;\n});\n\nvar list = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProviders = exports.listToIcons = void 0;\n\n/**\n * Convert icons list from string/icon mix to icons and validate them\n */\nfunction listToIcons(list, validate = true, simpleNames = false) {\n    const result = [];\n    list.forEach((item) => {\n        const icon = typeof item === 'string'\n            ? name.stringToIcon(item, false, simpleNames)\n            : item;\n        if (!validate || name.validateIcon(icon, simpleNames)) {\n            result.push({\n                provider: icon.provider,\n                prefix: icon.prefix,\n                name: icon.name,\n            });\n        }\n    });\n    return result;\n}\nexports.listToIcons = listToIcons;\n/**\n * Get all providers\n */\nfunction getProviders(list) {\n    const providers = Object.create(null);\n    list.forEach((icon) => {\n        providers[icon.provider] = true;\n    });\n    return Object.keys(providers);\n}\nexports.getProviders = getProviders;\n});\n\nvar api = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.API = exports.getRedundancyCache = void 0;\n\n\n\n\n\n\n\n\n\n// Empty abort callback for loadIcons()\nfunction emptyCallback() {\n    // Do nothing\n}\nconst pendingIcons = Object.create(null);\n/**\n * List of icons that are waiting to be loaded.\n *\n * List is passed to API module, then cleared.\n *\n * This list should not be used for any checks, use pendingIcons to check\n * if icons is being loaded.\n *\n * [provider][prefix] = array of icon names\n */\nconst iconsToLoad = Object.create(null);\n// Flags to merge multiple synchronous icon requests in one asynchronous request\nconst loaderFlags = Object.create(null);\nconst queueFlags = Object.create(null);\nconst redundancyCache = Object.create(null);\n/**\n * Get Redundancy instance for provider\n */\nfunction getRedundancyCache(provider) {\n    if (redundancyCache[provider] === void 0) {\n        const config = config$1.getAPIConfig(provider);\n        if (!config) {\n            // No way to load icons because configuration is not set!\n            return;\n        }\n        const redundancy$1 = redundancy.initRedundancy(config);\n        const cachedReundancy = {\n            config,\n            redundancy: redundancy$1,\n        };\n        redundancyCache[provider] = cachedReundancy;\n    }\n    return redundancyCache[provider];\n}\nexports.getRedundancyCache = getRedundancyCache;\n/**\n * Function called when new icons have been loaded\n */\nfunction loadedNewIcons(provider, prefix) {\n    // Run only once per tick, possibly joining multiple API responses in one call\n    if (loaderFlags[provider] === void 0) {\n        loaderFlags[provider] = Object.create(null);\n    }\n    const providerLoaderFlags = loaderFlags[provider];\n    if (!providerLoaderFlags[prefix]) {\n        providerLoaderFlags[prefix] = true;\n        setTimeout(() => {\n            providerLoaderFlags[prefix] = false;\n            callbacks.updateCallbacks(provider, prefix);\n        });\n    }\n}\n// Storage for errors for loadNewIcons(). Used to avoid spamming log with identical errors.\nconst errorsCache = Object.create(null);\n/**\n * Load icons\n */\nfunction loadNewIcons(provider, prefix, icons) {\n    function err() {\n        const key = (provider === '' ? '' : '@' + provider + ':') + prefix;\n        const time = Math.floor(Date.now() / 60000); // log once in a minute\n        if (errorsCache[key] < time) {\n            errorsCache[key] = time;\n            console.error('Unable to retrieve icons for \"' +\n                key +\n                '\" because API is not configured properly.');\n        }\n    }\n    // Create nested objects if needed\n    if (iconsToLoad[provider] === void 0) {\n        iconsToLoad[provider] = Object.create(null);\n    }\n    const providerIconsToLoad = iconsToLoad[provider];\n    if (queueFlags[provider] === void 0) {\n        queueFlags[provider] = Object.create(null);\n    }\n    const providerQueueFlags = queueFlags[provider];\n    if (pendingIcons[provider] === void 0) {\n        pendingIcons[provider] = Object.create(null);\n    }\n    const providerPendingIcons = pendingIcons[provider];\n    // Add icons to queue\n    if (providerIconsToLoad[prefix] === void 0) {\n        providerIconsToLoad[prefix] = icons;\n    }\n    else {\n        providerIconsToLoad[prefix] = providerIconsToLoad[prefix]\n            .concat(icons)\n            .sort();\n    }\n    // Redundancy item\n    let cachedReundancy;\n    // Trigger update on next tick, mering multiple synchronous requests into one asynchronous request\n    if (!providerQueueFlags[prefix]) {\n        providerQueueFlags[prefix] = true;\n        setTimeout(() => {\n            providerQueueFlags[prefix] = false;\n            // Get icons and delete queue\n            const icons = providerIconsToLoad[prefix];\n            delete providerIconsToLoad[prefix];\n            // Get API module\n            const api = modules$1.getAPIModule(provider);\n            if (!api) {\n                // No way to load icons!\n                err();\n                return;\n            }\n            // Get API config and Redundancy instance\n            if (cachedReundancy === void 0) {\n                const redundancy = getRedundancyCache(provider);\n                if (redundancy === void 0) {\n                    // No way to load icons because configuration is not set!\n                    err();\n                    return;\n                }\n                cachedReundancy = redundancy;\n            }\n            // Prepare parameters and run queries\n            const params = api.prepare(provider, prefix, icons);\n            params.forEach((item) => {\n                cachedReundancy.redundancy.query(item, api.send, (data, error) => {\n                    const storage = storage_1.getStorage(provider, prefix);\n                    // Check for error\n                    if (typeof data !== 'object') {\n                        if (error !== 404) {\n                            // Do not handle error unless it is 404\n                            return;\n                        }\n                        // Not found: mark as missing\n                        const t = Date.now();\n                        item.icons.forEach((name) => {\n                            storage.missing[name] = t;\n                        });\n                    }\n                    else {\n                        // Add icons to storage\n                        try {\n                            const added = storage_1.addIconSet(storage, data, 'all');\n                            if (typeof added === 'boolean') {\n                                return;\n                            }\n                            // Remove added icons from pending list\n                            const pending = providerPendingIcons[prefix];\n                            added.forEach((name) => {\n                                delete pending[name];\n                            });\n                            // Cache API response\n                            if (modules.coreModules.cache) {\n                                modules.coreModules.cache(provider, data);\n                            }\n                        }\n                        catch (err) {\n                            console.error(err);\n                        }\n                    }\n                    // Trigger update on next tick\n                    loadedNewIcons(provider, prefix);\n                });\n            });\n        });\n    }\n}\n/**\n * Check if icon is being loaded\n */\nconst isPending = (icon) => {\n    return (pendingIcons[icon.provider] !== void 0 &&\n        pendingIcons[icon.provider][icon.prefix] !== void 0 &&\n        pendingIcons[icon.provider][icon.prefix][icon.name] !== void 0);\n};\n/**\n * Load icons\n */\nconst loadIcons = (icons, callback) => {\n    // Clean up and copy icons list\n    const cleanedIcons = list.listToIcons(icons, true, functions.allowSimpleNames());\n    // Sort icons by missing/loaded/pending\n    // Pending means icon is either being requsted or is about to be requested\n    const sortedIcons = sort.sortIcons(cleanedIcons);\n    if (!sortedIcons.pending.length) {\n        // Nothing to load\n        let callCallback = true;\n        if (callback) {\n            setTimeout(() => {\n                if (callCallback) {\n                    callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n                }\n            });\n        }\n        return () => {\n            callCallback = false;\n        };\n    }\n    // Get all sources for pending icons\n    const newIcons = Object.create(null);\n    const sources = [];\n    let lastProvider, lastPrefix;\n    sortedIcons.pending.forEach((icon) => {\n        const provider = icon.provider;\n        const prefix = icon.prefix;\n        if (prefix === lastPrefix && provider === lastProvider) {\n            return;\n        }\n        lastProvider = provider;\n        lastPrefix = prefix;\n        sources.push({\n            provider,\n            prefix,\n        });\n        if (pendingIcons[provider] === void 0) {\n            pendingIcons[provider] = Object.create(null);\n        }\n        const providerPendingIcons = pendingIcons[provider];\n        if (providerPendingIcons[prefix] === void 0) {\n            providerPendingIcons[prefix] = Object.create(null);\n        }\n        if (newIcons[provider] === void 0) {\n            newIcons[provider] = Object.create(null);\n        }\n        const providerNewIcons = newIcons[provider];\n        if (providerNewIcons[prefix] === void 0) {\n            providerNewIcons[prefix] = [];\n        }\n    });\n    // List of new icons\n    const time = Date.now();\n    // Filter pending icons list: find icons that are not being loaded yet\n    // If icon was called before, it must exist in pendingIcons or storage, but because this\n    // function is called right after sortIcons() that checks storage, icon is definitely not in storage.\n    sortedIcons.pending.forEach((icon) => {\n        const provider = icon.provider;\n        const prefix = icon.prefix;\n        const name = icon.name;\n        const pendingQueue = pendingIcons[provider][prefix];\n        if (pendingQueue[name] === void 0) {\n            // New icon - add to pending queue to mark it as being loaded\n            pendingQueue[name] = time;\n            // Add it to new icons list to pass it to API module for loading\n            newIcons[provider][prefix].push(name);\n        }\n    });\n    // Load icons on next tick to make sure result is not returned before callback is stored and\n    // to consolidate multiple synchronous loadIcons() calls into one asynchronous API call\n    sources.forEach((source) => {\n        const provider = source.provider;\n        const prefix = source.prefix;\n        if (newIcons[provider][prefix].length) {\n            loadNewIcons(provider, prefix, newIcons[provider][prefix]);\n        }\n    });\n    // Store callback and return abort function\n    return callback\n        ? callbacks.storeCallback(callback, sortedIcons, sources)\n        : emptyCallback;\n};\n/**\n * Export module\n */\nexports.API = {\n    isPending,\n    loadIcons,\n};\n});\n\nvar functions$2 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.APIInternalFunctions = exports.APIFunctions = void 0;\n\n\n\nexports.APIFunctions = {\n    loadIcons: api.API.loadIcons,\n    addAPIProvider: config$1.setAPIConfig,\n};\nexports.APIInternalFunctions = {\n    getAPI: api.getRedundancyCache,\n    getAPIConfig: config$1.getAPIConfig,\n    setAPIModule: modules$1.setAPIModule,\n};\n});\n\nvar jsonp = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAPIModule = void 0;\nlet rootVar = null;\n/**\n * Endpoint\n */\nlet endPoint = '{prefix}.js?icons={icons}&callback={callback}';\n/**\n * Cache: provider:prefix = value\n */\nconst maxLengthCache = Object.create(null);\nconst pathCache = Object.create(null);\n/**\n * Get hash for query\n *\n * Hash is used in JSONP callback name, so same queries end up with same JSONP callback,\n * allowing response to be cached in browser.\n */\nfunction hash(str) {\n    let total = 0, i;\n    for (i = str.length - 1; i >= 0; i--) {\n        total += str.charCodeAt(i);\n    }\n    return total % 999;\n}\n/**\n * Get root object\n */\nfunction getGlobal() {\n    // Create root\n    if (rootVar === null) {\n        // window\n        const globalRoot = self;\n        // Test for window.Iconify. If missing, create 'IconifyJSONP'\n        let prefix = 'Iconify';\n        let extraPrefix = '.cb';\n        if (globalRoot[prefix] === void 0) {\n            // Use 'IconifyJSONP' global\n            prefix = 'IconifyJSONP';\n            extraPrefix = '';\n            if (globalRoot[prefix] === void 0) {\n                globalRoot[prefix] = Object.create(null);\n            }\n            rootVar = globalRoot[prefix];\n        }\n        else {\n            // Use 'Iconify.cb'\n            const iconifyRoot = globalRoot[prefix];\n            if (iconifyRoot.cb === void 0) {\n                iconifyRoot.cb = Object.create(null);\n            }\n            rootVar = iconifyRoot.cb;\n        }\n        // Change end point\n        endPoint = endPoint.replace('{callback}', prefix + extraPrefix + '.{cb}');\n    }\n    return rootVar;\n}\n/**\n * Return API module\n */\nconst getAPIModule = (getAPIConfig) => {\n    /**\n     * Calculate maximum icons list length for prefix\n     */\n    function calculateMaxLength(provider, prefix) {\n        // Get config and store path\n        const config = getAPIConfig(provider);\n        if (!config) {\n            return 0;\n        }\n        // Calculate\n        let result;\n        if (!config.maxURL) {\n            result = 0;\n        }\n        else {\n            let maxHostLength = 0;\n            config.resources.forEach((item) => {\n                const host = item;\n                maxHostLength = Math.max(maxHostLength, host.length);\n            });\n            // Make sure global is set\n            getGlobal();\n            // Extra width: prefix (3) + counter (4) - '{cb}' (4)\n            const extraLength = 3;\n            // Get available length\n            result =\n                config.maxURL -\n                    maxHostLength -\n                    config.path.length -\n                    endPoint\n                        .replace('{provider}', provider)\n                        .replace('{prefix}', prefix)\n                        .replace('{icons}', '').length -\n                    extraLength;\n        }\n        // Cache stuff and return result\n        const cacheKey = provider + ':' + prefix;\n        pathCache[cacheKey] = config.path;\n        maxLengthCache[cacheKey] = result;\n        return result;\n    }\n    /**\n     * Prepare params\n     */\n    const prepare = (provider, prefix, icons) => {\n        const results = [];\n        // Get maximum icons list length\n        const cacheKey = provider + ':' + prefix;\n        let maxLength = maxLengthCache[cacheKey];\n        if (maxLength === void 0) {\n            maxLength = calculateMaxLength(provider, prefix);\n        }\n        // Split icons\n        let item = {\n            provider,\n            prefix,\n            icons: [],\n        };\n        let length = 0;\n        icons.forEach((name, index) => {\n            length += name.length + 1;\n            if (length >= maxLength && index > 0) {\n                // Next set\n                results.push(item);\n                item = {\n                    provider,\n                    prefix,\n                    icons: [],\n                };\n                length = name.length;\n            }\n            item.icons.push(name);\n        });\n        results.push(item);\n        return results;\n    };\n    /**\n     * Load icons\n     */\n    const send = (host, params, status) => {\n        const provider = params.provider;\n        const prefix = params.prefix;\n        const icons = params.icons;\n        const iconsList = icons.join(',');\n        const cacheKey = provider + ':' + prefix;\n        // Create callback prefix\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const cbPrefix = prefix.split('-').shift().slice(0, 3);\n        const global = getGlobal();\n        // Callback hash\n        let cbCounter = hash(provider + ':' + host + ':' + prefix + ':' + iconsList);\n        while (global[cbPrefix + cbCounter] !== void 0) {\n            cbCounter++;\n        }\n        const callbackName = cbPrefix + cbCounter;\n        const path = pathCache[cacheKey] +\n            endPoint\n                .replace('{provider}', provider)\n                .replace('{prefix}', prefix)\n                .replace('{icons}', iconsList)\n                .replace('{cb}', callbackName);\n        global[callbackName] = (data) => {\n            // Remove callback and complete query\n            delete global[callbackName];\n            status.done(data);\n        };\n        // Create URI\n        const uri = host + path;\n        // console.log('API query:', uri);\n        // Create script and append it to head\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.src = uri;\n        document.head.appendChild(script);\n    };\n    // Return functions\n    return {\n        prepare,\n        send,\n    };\n};\nexports.getAPIModule = getAPIModule;\n});\n\nvar fetch_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAPIModule = exports.setFetch = void 0;\n/**\n * Endpoint\n */\nconst endPoint = '{prefix}.json?icons={icons}';\n/**\n * Cache\n */\nconst maxLengthCache = Object.create(null);\nconst pathCache = Object.create(null);\n/**\n * Fetch function\n *\n * Use this to set 'cross-fetch' in node.js environment if you are retrieving icons on server side.\n * Not needed when using stuff like Next.js or SvelteKit because components use API only on client side.\n */\nlet fetchModule = null;\ntry {\n    fetchModule = fetch;\n}\ncatch (err) {\n    //\n}\nfunction setFetch(fetch) {\n    fetchModule = fetch;\n}\nexports.setFetch = setFetch;\n/**\n * Return API module\n */\nconst getAPIModule = (getAPIConfig) => {\n    /**\n     * Calculate maximum icons list length for prefix\n     */\n    function calculateMaxLength(provider, prefix) {\n        // Get config and store path\n        const config = getAPIConfig(provider);\n        if (!config) {\n            return 0;\n        }\n        // Calculate\n        let result;\n        if (!config.maxURL) {\n            result = 0;\n        }\n        else {\n            let maxHostLength = 0;\n            config.resources.forEach((item) => {\n                const host = item;\n                maxHostLength = Math.max(maxHostLength, host.length);\n            });\n            // Get available length\n            result =\n                config.maxURL -\n                    maxHostLength -\n                    config.path.length -\n                    endPoint\n                        .replace('{provider}', provider)\n                        .replace('{prefix}', prefix)\n                        .replace('{icons}', '').length;\n        }\n        // Cache stuff and return result\n        const cacheKey = provider + ':' + prefix;\n        pathCache[cacheKey] = config.path;\n        maxLengthCache[cacheKey] = result;\n        return result;\n    }\n    /**\n     * Prepare params\n     */\n    const prepare = (provider, prefix, icons) => {\n        const results = [];\n        // Get maximum icons list length\n        let maxLength = maxLengthCache[prefix];\n        if (maxLength === void 0) {\n            maxLength = calculateMaxLength(provider, prefix);\n        }\n        // Split icons\n        let item = {\n            provider,\n            prefix,\n            icons: [],\n        };\n        let length = 0;\n        icons.forEach((name, index) => {\n            length += name.length + 1;\n            if (length >= maxLength && index > 0) {\n                // Next set\n                results.push(item);\n                item = {\n                    provider,\n                    prefix,\n                    icons: [],\n                };\n                length = name.length;\n            }\n            item.icons.push(name);\n        });\n        results.push(item);\n        return results;\n    };\n    /**\n     * Load icons\n     */\n    const send = (host, params, status) => {\n        const provider = params.provider;\n        const prefix = params.prefix;\n        const icons = params.icons;\n        const iconsList = icons.join(',');\n        const cacheKey = provider + ':' + prefix;\n        const path = pathCache[cacheKey] +\n            endPoint\n                .replace('{provider}', provider)\n                .replace('{prefix}', prefix)\n                .replace('{icons}', iconsList);\n        if (!fetchModule) {\n            // Fail: return 424 Failed Dependency (its not meant to be used like that, but it is the best match)\n            status.done(void 0, 424);\n            return;\n        }\n        // console.log('API query:', host + path);\n        fetchModule(host + path)\n            .then((response) => {\n            if (response.status !== 200) {\n                status.done(void 0, response.status);\n                return;\n            }\n            return response.json();\n        })\n            .then((data) => {\n            if (typeof data !== 'object' || data === null) {\n                return;\n            }\n            // Store cache and complete\n            status.done(data);\n        })\n            .catch((err) => {\n            // Error\n            status.done(void 0, err.errno);\n        });\n    };\n    // Return functions\n    return {\n        prepare,\n        send,\n    };\n};\nexports.getAPIModule = getAPIModule;\n});\n\nvar browserStorage = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeCache = exports.loadCache = exports.mock = exports.emptyList = exports.count = exports.config = void 0;\n\n// After changing configuration change it in tests/*/fake_cache.ts\n// Cache version. Bump when structure changes\nconst cacheVersion = 'iconify2';\n// Cache keys\nconst cachePrefix = 'iconify';\nconst countKey = cachePrefix + '-count';\nconst versionKey = cachePrefix + '-version';\n/**\n * Cache expiration\n */\nconst hour = 3600000;\nconst cacheExpiration = 168; // In hours\n/**\n * Storage configuration\n */\nexports.config = {\n    local: true,\n    session: true,\n};\n/**\n * Flag to check if storage has been loaded\n */\nlet loaded = false;\n/**\n * Items counter\n */\nexports.count = {\n    local: 0,\n    session: 0,\n};\n/**\n * List of empty items\n */\nexports.emptyList = {\n    local: [],\n    session: [],\n};\nlet _window = typeof window === 'undefined' ? {} : window;\nfunction mock(fakeWindow) {\n    loaded = false;\n    _window = fakeWindow;\n}\nexports.mock = mock;\n/**\n * Get global\n *\n * @param key\n */\nfunction getGlobal(key) {\n    const attr = key + 'Storage';\n    try {\n        if (_window &&\n            _window[attr] &&\n            typeof _window[attr].length === 'number') {\n            return _window[attr];\n        }\n    }\n    catch (err) {\n        //\n    }\n    // Failed - mark as disabled\n    exports.config[key] = false;\n    return null;\n}\n/**\n * Change current count for storage\n */\nfunction setCount(storage, key, value) {\n    try {\n        storage.setItem(countKey, value + '');\n        exports.count[key] = value;\n        return true;\n    }\n    catch (err) {\n        return false;\n    }\n}\n/**\n * Get current count from storage\n *\n * @param storage\n */\nfunction getCount(storage) {\n    const count = storage.getItem(countKey);\n    if (count) {\n        const total = parseInt(count);\n        return total ? total : 0;\n    }\n    return 0;\n}\n/**\n * Initialize storage\n *\n * @param storage\n * @param key\n */\nfunction initCache(storage, key) {\n    try {\n        storage.setItem(versionKey, cacheVersion);\n    }\n    catch (err) {\n        //\n    }\n    setCount(storage, key, 0);\n}\n/**\n * Destroy old cache\n *\n * @param storage\n */\nfunction destroyCache(storage) {\n    try {\n        const total = getCount(storage);\n        for (let i = 0; i < total; i++) {\n            storage.removeItem(cachePrefix + i);\n        }\n    }\n    catch (err) {\n        //\n    }\n}\n/**\n * Load icons from cache\n */\nconst loadCache = () => {\n    if (loaded) {\n        return;\n    }\n    loaded = true;\n    // Minimum time\n    const minTime = Math.floor(Date.now() / hour) - cacheExpiration;\n    // Load data from storage\n    function load(key) {\n        const func = getGlobal(key);\n        if (!func) {\n            return;\n        }\n        // Get one item from storage\n        const getItem = (index) => {\n            const name = cachePrefix + index;\n            const item = func.getItem(name);\n            if (typeof item !== 'string') {\n                // Does not exist\n                return false;\n            }\n            // Get item, validate it\n            let valid = true;\n            try {\n                // Parse, check time stamp\n                const data = JSON.parse(item);\n                if (typeof data !== 'object' ||\n                    typeof data.cached !== 'number' ||\n                    data.cached < minTime ||\n                    typeof data.provider !== 'string' ||\n                    typeof data.data !== 'object' ||\n                    typeof data.data.prefix !== 'string') {\n                    valid = false;\n                }\n                else {\n                    // Add icon set\n                    const provider = data.provider;\n                    const prefix = data.data.prefix;\n                    const storage = storage_1.getStorage(provider, prefix);\n                    valid = storage_1.addIconSet(storage, data.data);\n                }\n            }\n            catch (err) {\n                valid = false;\n            }\n            if (!valid) {\n                func.removeItem(name);\n            }\n            return valid;\n        };\n        try {\n            // Get version\n            const version = func.getItem(versionKey);\n            if (version !== cacheVersion) {\n                if (version) {\n                    // Version is set, but invalid - remove old entries\n                    destroyCache(func);\n                }\n                // Empty data\n                initCache(func, key);\n                return;\n            }\n            // Get number of stored items\n            let total = getCount(func);\n            for (let i = total - 1; i >= 0; i--) {\n                if (!getItem(i)) {\n                    // Remove item\n                    if (i === total - 1) {\n                        // Last item - reduce country\n                        total--;\n                    }\n                    else {\n                        // Mark as empty\n                        exports.emptyList[key].push(i);\n                    }\n                }\n            }\n            // Update total\n            setCount(func, key, total);\n        }\n        catch (err) {\n            //\n        }\n    }\n    for (const key in exports.config) {\n        load(key);\n    }\n};\nexports.loadCache = loadCache;\n/**\n * Function to cache icons\n */\nconst storeCache = (provider, data) => {\n    if (!loaded) {\n        exports.loadCache();\n    }\n    function store(key) {\n        if (!exports.config[key]) {\n            return false;\n        }\n        const func = getGlobal(key);\n        if (!func) {\n            return false;\n        }\n        // Get item index\n        let index = exports.emptyList[key].shift();\n        if (index === void 0) {\n            // Create new index\n            index = exports.count[key];\n            if (!setCount(func, key, index + 1)) {\n                return false;\n            }\n        }\n        // Create and save item\n        try {\n            const item = {\n                cached: Math.floor(Date.now() / hour),\n                provider,\n                data,\n            };\n            func.setItem(cachePrefix + index, JSON.stringify(item));\n        }\n        catch (err) {\n            return false;\n        }\n        return true;\n    }\n    // Attempt to store at localStorage first, then at sessionStorage\n    if (!store('local')) {\n        store('session');\n    }\n};\nexports.storeCache = storeCache;\n});\n\nvar functions$3 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toggleBrowserCache = void 0;\n\n/**\n * Toggle cache\n */\nfunction toggleBrowserCache(storage, value) {\n    switch (storage) {\n        case 'local':\n        case 'session':\n            browserStorage.config[storage] = value;\n            break;\n        case 'all':\n            for (const key in browserStorage.config) {\n                browserStorage.config[key] = value;\n            }\n            break;\n    }\n}\nexports.toggleBrowserCache = toggleBrowserCache;\n});\n\nvar shorthand = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.alignmentFromString = exports.flipFromString = void 0;\nconst separator = /[\\s,]+/;\n/**\n * Apply \"flip\" string to icon customisations\n */\nfunction flipFromString(custom, flip) {\n    flip.split(separator).forEach((str) => {\n        const value = str.trim();\n        switch (value) {\n            case 'horizontal':\n                custom.hFlip = true;\n                break;\n            case 'vertical':\n                custom.vFlip = true;\n                break;\n        }\n    });\n}\nexports.flipFromString = flipFromString;\n/**\n * Apply \"align\" string to icon customisations\n */\nfunction alignmentFromString(custom, align) {\n    align.split(separator).forEach((str) => {\n        const value = str.trim();\n        switch (value) {\n            case 'left':\n            case 'center':\n            case 'right':\n                custom.hAlign = value;\n                break;\n            case 'top':\n            case 'middle':\n            case 'bottom':\n                custom.vAlign = value;\n                break;\n            case 'slice':\n            case 'crop':\n                custom.slice = true;\n                break;\n            case 'meet':\n                custom.slice = false;\n        }\n    });\n}\nexports.alignmentFromString = alignmentFromString;\n});\n\nvar rotate = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rotateFromString = void 0;\n/**\n * Get rotation value\n */\nfunction rotateFromString(value) {\n    const units = value.replace(/^-?[0-9.]*/, '');\n    function cleanup(value) {\n        while (value < 0) {\n            value += 4;\n        }\n        return value % 4;\n    }\n    if (units === '') {\n        const num = parseInt(value);\n        return isNaN(num) ? 0 : cleanup(num);\n    }\n    else if (units !== value) {\n        let split = 0;\n        switch (units) {\n            case '%':\n                // 25% -> 1, 50% -> 2, ...\n                split = 25;\n                break;\n            case 'deg':\n                // 90deg -> 1, 180deg -> 2, ...\n                split = 90;\n        }\n        if (split) {\n            let num = parseFloat(value.slice(0, value.length - units.length));\n            if (isNaN(num)) {\n                return 0;\n            }\n            num = num / split;\n            return num % 1 === 0 ? cleanup(num) : 0;\n        }\n    }\n    return 0;\n}\nexports.rotateFromString = rotateFromString;\n});\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Generate icon from properties\n */\nfunction render(\n// Icon must be validated before calling this function\nicon, \n// Properties\nprops) {\n    const customisations$1 = customisations.mergeCustomisations(customisations.defaults, props);\n    const componentProps = merge_1.merge(svgDefaults);\n    // Create style if missing\n    let style = typeof props.style === 'string' ? props.style : '';\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'onLoad':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations$1[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    shorthand.flipFromString(customisations$1, value);\n                }\n                break;\n            // Alignment as string\n            case 'align':\n                if (typeof value === 'string') {\n                    shorthand.alignmentFromString(customisations$1, value);\n                }\n                break;\n            // Color: copy to style, add extra ';' in case style is missing it\n            case 'color':\n                style =\n                    style +\n                        (style.length > 0 && style.trim().slice(-1) !== ';'\n                            ? ';'\n                            : '') +\n                        'color: ' +\n                        value +\n                        '; ';\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations$1[key] = rotate.rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations$1[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            // Copy missing property if it does not exist in customisations\n            default:\n                if (customisations.defaults[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = builder.iconToSVG(icon, customisations$1);\n    // Add icon stuff\n    for (let key in item.attributes) {\n        componentProps[key] =\n            item.attributes[key];\n    }\n    if (item.inline) {\n        // Style overrides it\n        style = 'vertical-align: -0.125em; ' + style;\n    }\n    // Style\n    if (style !== '') {\n        componentProps.style = style;\n    }\n    // Counter for ids based on \"id\" property to render icons consistently on server and client\n    let localCounter = 0;\n    const id = props.id;\n    // Generate HTML\n    return {\n        attributes: componentProps,\n        body: ids.replaceIDs(item.body, id ? () => id + '-' + localCounter++ : 'iconify-svelte-'),\n    };\n}\n\n// Core\n/**\n * Enable and disable browser cache\n */\nconst enableCache = (storage) => functions$3.toggleBrowserCache(storage, true);\nconst disableCache = (storage) => functions$3.toggleBrowserCache(storage, false);\n/* Storage functions */\n/**\n * Check if icon exists\n */\nconst iconExists = functions.storageFunctions.iconExists;\n/**\n * Get icon data\n */\nconst getIcon = functions.storageFunctions.getIcon;\n/**\n * List available icons\n */\nconst listIcons = functions.storageFunctions.listIcons;\n/**\n * Add one icon\n */\nconst addIcon = functions.storageFunctions.addIcon;\n/**\n * Add icon set\n */\nconst addCollection = functions.storageFunctions.addCollection;\n/* Builder functions */\n/**\n * Calculate icon size\n */\nconst calculateSize = functions$1.builderFunctions.calculateSize;\n/**\n * Replace unique ids in content\n */\nconst replaceIDs = functions$1.builderFunctions.replaceIDs;\n/**\n * Build SVG\n */\nconst buildIcon = functions$1.builderFunctions.buildIcon;\n/* API functions */\n/**\n * Load icons\n */\nconst loadIcons = functions$2.APIFunctions.loadIcons;\n/**\n * Add API provider\n */\nconst addAPIProvider = functions$2.APIFunctions.addAPIProvider;\n/**\n * Export internal functions that can be used by third party implementations\n */\nconst _api = functions$2.APIInternalFunctions;\n/**\n * Initialise stuff\n */\n// Enable short names\nfunctions.allowSimpleNames(true);\n// Set API\nmodules.coreModules.api = api.API;\n// Use Fetch API by default\nlet getAPIModule = fetch_1.getAPIModule;\ntry {\n    if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n        // If window and document exist, attempt to load whatever module is available, otherwise use Fetch API\n        getAPIModule =\n            typeof fetch === 'function' && typeof Promise === 'function'\n                ? fetch_1.getAPIModule\n                : jsonp.getAPIModule;\n    }\n}\ncatch (err) {\n    //\n}\nmodules$1.setAPIModule('', getAPIModule(config$1.getAPIConfig));\n/**\n * Function to enable node-fetch for getting icons on server side\n */\n_api.setFetch = (nodeFetch) => {\n    fetch_1.setFetch(nodeFetch);\n    if (getAPIModule !== fetch_1.getAPIModule) {\n        getAPIModule = fetch_1.getAPIModule;\n        modules$1.setAPIModule('', getAPIModule(config$1.getAPIConfig));\n    }\n};\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    modules.coreModules.cache = browserStorage.storeCache;\n    browserStorage.loadCache();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!config$1.setAPIConfig(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\n/**\n * Check if component needs to be updated\n */\nfunction checkIconState(icon$1, state, mounted, callback, onload) {\n    // Abort loading icon\n    function abortLoading() {\n        if (state.loading) {\n            state.loading.abort();\n            state.loading = null;\n        }\n    }\n    // Icon is an object\n    if (typeof icon$1 === 'object' &&\n        icon$1 !== null &&\n        typeof icon$1.body === 'string') {\n        // Stop loading\n        state.name = '';\n        abortLoading();\n        return { data: icon.fullIcon(icon$1) };\n    }\n    // Invalid icon?\n    let iconName;\n    if (typeof icon$1 !== 'string' ||\n        (iconName = name.stringToIcon(icon$1, false, true)) === null) {\n        abortLoading();\n        return null;\n    }\n    // Load icon\n    const data = functions.getIconData(iconName);\n    if (data === null) {\n        // Icon needs to be loaded\n        // Do not load icon until component is mounted\n        if (mounted && (!state.loading || state.loading.name !== icon$1)) {\n            // New icon to load\n            abortLoading();\n            state.name = '';\n            state.loading = {\n                name: icon$1,\n                abort: api.API.loadIcons([iconName], callback),\n            };\n        }\n        return null;\n    }\n    // Icon data is available\n    abortLoading();\n    if (state.name !== icon$1) {\n        state.name = icon$1;\n        if (onload && !state.destroyed) {\n            onload(icon$1);\n        }\n    }\n    // Add classes\n    const classes = ['iconify'];\n    if (iconName.prefix !== '') {\n        classes.push('iconify--' + iconName.prefix);\n    }\n    if (iconName.provider !== '') {\n        classes.push('iconify--' + iconName.provider);\n    }\n    return { data, classes };\n}\n/**\n * Generate icon\n */\nfunction generateIcon(icon, props) {\n    return icon ? render(icon, props) : null;\n}\n\nexport { _api, addAPIProvider, addCollection, addIcon, buildIcon, calculateSize, checkIconState, disableCache, enableCache, generateIcon, getIcon, iconExists, listIcons, loadIcons, replaceIDs };\n","<script context=\"module\">\n\n// Export stuff.\n// Important: duplicate of iconify.ts. When changing exports, they must be changed in both files.\nimport { \n\tenableCache,\n\tdisableCache, \n\ticonExists,\n\tgetIcon,\n\tlistIcons,\n\taddIcon,\n\taddCollection,\n\tcalculateSize,\n\treplaceIDs,\n\tbuildIcon,\n\tloadIcons,\n\taddAPIProvider,\n\t_api\n} from './functions';\n\nexport { \n\tenableCache,\n\tdisableCache, \n\ticonExists,\n\tgetIcon,\n\tlistIcons,\n\taddIcon,\n\taddCollection,\n\tcalculateSize,\n\treplaceIDs,\n\tbuildIcon,\n\tloadIcons,\n\taddAPIProvider,\n\t_api\n}\n\n</script>\n<script>\n\timport { onMount, onDestroy } from 'svelte';\n\timport { checkIconState, generateIcon } from './functions';\n\n\t// State\n\tconst state = {\n\t\t// Last icon name\n\t\tname: '',\n\n\t\t// Loading status\n\t\tloading: null,\n\n\t\t// Destroyed status\n\t\tdestroyed: false,\n\t};\n\n\t// Mounted status\n\tlet mounted = false;\n\n\t// Callback counter\n\tlet counter = 0;\n\n\t// Generated data\n\tlet data;\n\n\t// Generate data\n\t$: {\n\t\tcounter;\n\t\tconst iconData = checkIconState($$props.icon, state, mounted, loaded, $$props.onLoad);\n\t\tdata = iconData ? generateIcon(iconData.data, $$props) : null;\n\t\tif (data && iconData.classes) {\n\t\t\t// Add classes\n\t\t\tdata.attributes['class'] = (typeof $$props['class'] === 'string' ? $$props['class'] + ' ' : '') + iconData.classes.join(' ');\n\t\t}\n\t}\n\n\t// Increase counter when loaded to force re-calculation of data\n\tfunction loaded() {\n\t\tcounter ++;\n\t}\n\n\t// Force re-render\n\tonMount(() => {\n\t\tmounted = true;\n\t});\n\n\t// Abort loading when component is destroyed\n\tonDestroy(() => {\n\t\tstate.destroyed = true;\n\t\tif (state.loading) {\n\t\t\tstate.loading.abort();\n\t\t\tstate.loading = null;\n\t\t}\n\t})\n</script>\n\n{#if data !== null}\n<svg {...data.attributes}>\n\t{@html data.body}\n</svg>\n{/if}","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\t\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","exclude_internal_props","props","result","null_to_empty","value","current_component","is_hydrating","upper_bound","low","high","key","mid","append","target","node","hydrate_init","children","childNodes","m","Int32Array","longest","seqLen","idx","claim_order","newLen","lis","toMove","last","cur","push","reverse","sort","j","anchor","insertBefore","init_hydrate","actual_end_child","parentElement","firstChild","nextSibling","parentNode","appendChild","insert","detach","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_svg_attributes","attributes","set_current_component","component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","slot_ctx","action_result","duration","delay","destroy","trigger","reveal","hide","cssClass","args","revealNode","querySelector","style","setProperty","IntersectionObserver","entries","observer","entry","isIntersecting","dispatchEvent","CustomEvent","disconnect","root","rootMargin","threshold","observe","e","createCommonjsModule","basedir","module","path","exports","require","base","commonjsRequire","defineProperty","validateIcon","stringToIcon","match","validate","allowSimpleName","provider","colonSeparated","split","shift","prefix","dashSeparated","join","icon","merge_1","merge","item1","item2","item3","items","item","fullIcon","iconDefaults","freeze","body","left","top","width","height","rotate","vFlip","hFlip","mergeIcons","iconKeys","icon1","icon2","iconSet","parseIconSet","defaultsKeys","resolveAlias","alias","icons","aliases","level","parent","list","added","not_found","defaults","icon$1","storage_1","listIcons","getIcon","iconExists","addIcon","addIconSet","getStorage","newStorage","storage","missing","providerStorage","t","Date","now","err","providers","allIcons","prefixes","concat","functions","storageFunctions","addCollection","getIconData","allowSimpleNames","simpleNames","name$1","allow","ids","replaceIDs","regex","randomPrefix","toString","random","counter","strReplace","search","replace","subject","pos","exec","id","newID","calcSize","calculateSize","unitsSplit","unitsTest","size","ratio","precision","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","customisations","mergeCustomisations","inline","hAlign","vAlign","builder","preserveAspectRatio","iconToSVG","box","transformations","tempValue","rotation","floor","unshift","viewBox","functions$1","builderFunctions","buildIcon","customisations$1","modules","coreModules","config","defaultConfig","resources","timeout","dataAfterTimeout","query","sendQuery","payload","done","success","resourcesCount","startIndex","nextIndex","startTime","lastError","status","queriesSent","timer","queue","doneCallbacks","resetTimer","clearTimeout","abort","subscribe","overwrite","getQueryStatus","queriesPending","failQuery","clearQueue","execNext","resource","setTimeout","error","isError","queued","moduleResponse","redundancy","setConfig","config$1","newConfig","initRedundancy","cfg","queries","cleanup","queryCallback","doneCallback","query$1","newIndex","find","setIndex","getIndex","sortIcons","loaded","pending","localeCompare","lastIcon","localStorage","storeCallback","updateCallbacks","pendingUpdates","removeCallback","sources","source","providerCallbacks","row","providerPendingUpdates","hasPending","oldLength","idCounter","pendingSources","bind","modules$1","getAPIModule","setAPIModule","createConfig","maxURL","getAPIConfig","setAPIConfig","configStorage","fallBackAPISources","fallBackAPI","customConfig","getProviders","listToIcons","api","emptyCallback","API","getRedundancyCache","pendingIcons","iconsToLoad","loaderFlags","queueFlags","redundancyCache","cachedReundancy","errorsCache","loadNewIcons","time","console","providerIconsToLoad","providerQueueFlags","providerPendingIcons","prepare","send","cache","providerLoaderFlags","loadedNewIcons","isPending","loadIcons","cleanedIcons","sortedIcons","callCallback","newIcons","lastProvider","lastPrefix","providerNewIcons","pendingQueue","functions$2","APIInternalFunctions","APIFunctions","addAPIProvider","getAPI","jsonp","rootVar","endPoint","maxLengthCache","pathCache","getGlobal","globalRoot","self","extraPrefix","iconifyRoot","cb","results","maxLength","maxHostLength","host","extraLength","cacheKey","calculateMaxLength","params","iconsList","cbPrefix","global","cbCounter","str","total","charCodeAt","hash","callbackName","uri","script","async","head","fetch_1","setFetch","fetchModule","fetch","response","json","catch","errno","browserStorage","storeCache","loadCache","mock","emptyList","count","cacheVersion","cachePrefix","countKey","versionKey","hour","session","_window","window","setCount","setItem","getCount","getItem","parseInt","fakeWindow","minTime","load","func","valid","JSON","parse","cached","removeItem","version","destroyCache","initCache","store","stringify","toggleBrowserCache","shorthand","alignmentFromString","flipFromString","separator","custom","flip","trim","align","rotateFromString","units","svgDefaults","xmlns","xmlns:xlink","aria-hidden","role","_api","nodeFetch","IconifyPreload","preload","IconifyProviders","generateIcon","componentProps","localCounter","render","createElementNS","levels","updates","to_null_out","accounted_for","n","state","loading","destroyed","mounted","onDestroy","iconData","onload","abortLoading","iconName","classes","checkIconState","onLoad"],"mappings":"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"}